{"version":3,"sources":["panels/Home.js","panels/Persik.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","title","before","photo_200","src","first_name","last_name","bdate","size","level","onClick","data-to","osName","platform","now","moment","format","Persik","props","left","IOS","str","undefined","arr1","split","arr2","length","push","Number","String","reverse","to","Date","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","ReactDOM","render","getElementById"],"mappings":"yrBA8CeA,EApCF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAIC,EAAX,EAAWA,YAAX,OACZ,kBAAC,IAAD,CAAOF,GAAIA,GACV,kBAAC,IAAD,gBACCE,GACD,kBAAC,IAAD,CAAOC,MAAM,oCACZ,kBAAC,IAAD,CAAMC,OAAQF,EAAYG,UAAY,kBAAC,IAAD,CAAQC,IAAKJ,EAAYG,YAAe,MAA9E,UACKH,EAAYK,WADjB,YAC+BL,EAAYM,WAC1C,6BACCN,EAAYO,MAAZ,UAAqBP,EAAYO,OAAQ,0HAI5C,kBAAC,IAAD,CAAON,MAAM,sBACZ,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAQO,KAAK,KAAKC,MAAM,IAAIC,QAASX,EAAIY,UAAQ,UAAjD,2C,+ECXEC,G,OAASC,eACTC,EAAMC,MAASC,OAAO,YAiDbC,EA3BA,SAACC,GAAD,OACd,kBAAC,IAAD,CAAOpB,GAAIoB,EAAMpB,IAChB,kBAAC,IAAD,CACCqB,KAAM,kBAAC,IAAD,CAAmBT,QAASQ,EAAMnB,GAAIY,UAAQ,QAClDC,IAAWQ,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAF3C,uBAOA,wBAAItB,GAAG,YA7BI,SAACuB,EAAIP,GACjB,GAAW,OAARO,QAAwBC,IAARD,EAClB,MAAO,kdAGR,IAAIE,EAAOF,EAAIG,MAAM,KACjBC,EAAOX,EAAIU,MAAM,KAWrB,OATID,EAAKG,OAAS,GACjBH,EAAKI,KAAKF,EAAK,IAEZG,OAAOL,EAAK,IAAMK,OAAOH,EAAK,IACjCF,EAAK,GAAKM,OAAOD,OAAOH,EAAK,IAAM,GAGnCF,EAAK,GAAKM,OAAOD,OAAOH,EAAK,KAEvBV,IAAOU,EAAKK,WAAWC,GAAGhB,IAAOQ,EAAKO,YAYzBE,CAAKd,EAAMlB,YAAYO,MAAMO,MCAnCmB,EApCH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVlC,EAFU,KAEGqC,EAFH,OAGWH,mBAAS,kBAAC,IAAD,CAAe1B,KAAK,WAHxC,mBAGV8B,EAHU,KAGFC,EAHE,KAIjBC,qBAAU,WAAM,4CAUf,4BAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,OACOC,EADP,OAECP,EAAQO,GACRL,EAAU,MAHX,4CAVe,sBAEfG,IAAOG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACnC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OANzB,mCAefQ,KACE,IAGH,IAAM1D,EAAK,SAAA2D,GACVtB,EAAesB,EAAEC,cAAcC,QAAQ7B,KAIxC,OACC,kBAAC,IAAD,CAAMI,YAAaA,EAAaG,OAAQA,GACvC,kBAAC,EAAD,CAAMxC,GAAG,OAAOE,YAAaA,EAAaD,GAAIA,IAC9C,kBAAC,EAAD,CAAQD,GAAG,SAASE,YAAaA,EAAaD,GAAIA,MChCrD2C,IAAOC,KAAK,gBAEZkB,IAASC,OAAO,kBAAC,EAAD,MAASZ,SAASa,eAAe,W","file":"static/js/main.ffec4b95.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Welcome</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Bridge\">\n\t\t\t<Cell before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t\t<br />\n\t\t\t\t{fetchedUser.bdate?`${fetchedUser.bdate}`:'не нашли дату рождения'}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tHow much is left before my birthday\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tbdate: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport moment from 'moment';\n\n// import persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\nconst now = moment().format('D M YYYY');\n\nconst Date = (str,now) => {\n\tif(str === null || str === undefined){\n\t\treturn 'Мы не смогли получить дату вашего рождения. Пожалуйста укажите ее для продолжения работы'\n\t}\n\n\tlet arr1 = str.split('.')\n\tlet arr2 = now.split(' ')\n\n\tif (arr1.length < 3) {\n\t\tarr1.push(arr2[2])\n\t}\n\tif (Number(arr1[1]) < Number(arr2[1])){\n\t\tarr1[2] = String(Number(arr2[2]) + 1); \n\t}\n\telse {\n\t\tarr1[2] = String(Number(arr2[2]))\n\t}\n\treturn moment(arr2.reverse()).to(moment(arr1.reverse()))\n}\n\nconst Persik = (props) => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tUntil your birthday\n\t\t</PanelHeader>\n\t\t<h2 id='greeting'>{Date(props.fetchedUser.bdate,now)}</h2>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tbdate: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\tuseEffect(() => {\n\t\t// Определение цветовой схемы пользователя\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\t// Получение данных пользователя\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\t// Переход по экранам\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\t// Вывод на экран\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Persik id='persik' fetchedUser={fetchedUser} go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}